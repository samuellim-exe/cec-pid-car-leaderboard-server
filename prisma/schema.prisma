// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Team {
  id        String   @id @default(cuid())
  name      String
  results   Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//TODO: Add isEnded to sessions
// sessions can be eneded by making a POST request to /api/sessions/:id/end
model Session {
  id        String    @id @default(cuid())
  title     String
  results   Result[]
  isEnded   Boolean   @default(false)
  endedAt   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Result {
  id        String   @id @default(cuid())
  teamId    String
  sessionId String
  //TODO: check if score is stored in seconds or ms
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  espId     Int

  team    Team    @relation(fields: [teamId], references: [id])
  session Session @relation(fields: [sessionId], references: [id])
}
